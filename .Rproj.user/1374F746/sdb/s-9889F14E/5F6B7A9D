{
    "contents" : "\nrequire(plyr)\nrequire(ggplot2)\nrequire(scales)\nsubmap <- read.csv2(\"d:/Tools_Scripts/Mapping tables/RWS2DELWAQ2names.csv\", header = T, stringsAsFactors=FALSE)\nlocmap <- read.csv2(\"d:/Tools_Scripts/Mapping tables/RWS2DELWAQ2locations.csv\", header = T, stringsAsFactors=FALSE)\n# locmod = c(\"Huibertgat_oost\", \"IMARES_st_2\", \"IMARES_st_3b\", \"Bocht_van_Watum\", \"IMARES_st_4b\", \"IMARES_st_5\", \"Groote_Gat_noord\")\nlocmod = c(\"Huibertgat_oost\", \"Bocht_van_Watum\", \"Groote_Gat_noord\")\n\n# submod = c(\"PO4\", \"NO3\", \"NH4\", \"Si\"); plotname = \"nutrients\"\nsubmod = c(\"ExtVl\", \"Chlfa\", \"SS\"); plotname = \"light+spm\"\n\n# modversion = \"eco-scen4-run1-random-corr-spm-34_2_bal_all-day\"\nworkdir <- \"d:\\\\MODELS\\\\ED\\\\\"\nversions <- c(\"eco-scen4-run1-23-y2-day\",\n              \"eco-scen4-run1-24-y2-day\",\n              \"eco-scen4-run1-28-y2-day\",\n              \"eco-scen4-run1-28-y2_2-day\",\n              \"eco-scen4-run1-random-corr-spm-31-day\",\n              \"eco-scen4-run1-random-corr-spm-32-day\",\n              \"eco-scen4-run1-random-corr-spm-34_2-day\")\n\nfor(ii in seq(1,length(versions))) {\nmodversion <- versions[1]\n  savedir <- file.path(workdir, modversion)\ndir.create(savedir)\nmodarr <- his2arr(paste(workdir, modversion, \".his\", sep = \"\"))\nmoddat <- arr2df( arr = modarr, submod = submod, locmod = locmod)\nmoddat$variable <- factor(moddat$variable, levels = submod)\nmoddat$variable   <- mapvalues(as.character(moddat$variable), from = submap$Delwaq, to = submap$Delwaq_long_name, warn_missing = F)\n\nrws_dat <- read.csv2(\"d:\\\\GIS-DATA\\\\Nederland\\\\EemsDoll\\\\naarPostGis\\\\RWS\\\\MWTL_all.csv\",dec = \".\")\nrws_dat$time <- as.POSIXct(rws_dat$datetime, format = \"%Y-%m-%d %H:%M:%S\")\nrws_dat$variable   <- mapvalues(as.character(rws_dat$parhdhcod), from = submap$RWS_DONAR_parcod_hdh2, to = submap$Delwaq, warn_missing = F)\nrws_dat$location <- mapvalues(as.character(rws_dat$locoms), from = locmap$locoms, to = locmap$Delwaq_ED, warn_missing = F)\nrws_dat2 <- subset(rws_dat, rws_dat$variable %in% submod &\n                     rws_dat$location %in% locmod &\n                     rws_dat$time > (min(moddat$time) - (0*365*24*60*60)) &\n                     rws_dat$time < max(moddat$time)\n                   )\nrws_dat2$variable   <- mapvalues(as.character(rws_dat2$variable), from = submap$Delwaq, to = submap$Delwaq_long_name, warn_missing = F)\n\n#filter for high PO4 and NH4 measurements\nrws_dat2 <- subset(rws_dat2, rws_dat2$wrd < 0.6 | rws_dat2$variable != \"phosphate\")\nrws_dat2 <- subset(rws_dat2, rws_dat2$wrd < 0.6 | rws_dat2$variable != \"ammonium\")\nrws_dat2 <- subset(rws_dat2, rws_dat2$wrd < 1e11)\n\np <- ggplot(moddat,(aes(time, value)))\np + geom_line(aes(color = location), size = 1) +\n#   geom_point(data = im_dat2, aes(time, value), color = \"blue\", size = 3, alpha = 0.6) +\n  geom_point(data = rws_dat2, aes(time, wrd), color = \"black\", size = 3, alpha = 0.6) +\n  facet_grid(variable ~ location, scales = \"free\") +\n  scale_x_datetime(breaks = date_breaks(\"2 months\"),\n                   labels = date_format(\"%b\"))\n\nggsave(file.path(savedir, paste(plotname, modversion, \".png\", sep = \"_\")),\n       width = 8, height = 6)\n\n\n##===============================================\n## MAKE TARGET DIAGRAMS\n##==============================================\nbeginsummer <- as.POSIXct(\"2012-04-01\")\nendsummer <- as.POSIXct(\"2012-09-30\")\n\n#for rws data\n\nrws_dat2$time <- as.POSIXct(format(rws_dat2$time, format = \"%Y-%m-%d\"))\nmoddat$time <- as.POSIXct(format(moddat$time, format = \"%Y-%m-%d\"))\n\nstattable <- merge(rws_dat2, moddat, by = c(\"time\", \"location\", \"variable\"))\n\nstattable2 <- subset(stattable, !is.na(stattable$wrd) & !is.na(stattable$value))\n\nq <- ggplot(stattable2, aes(time, wrd))\nq + geom_point(aes()) +\n  geom_line(aes(x=time, y=value), data = stattable2) +\n  facet_grid(location~variable)\n\nttable <- make.target.table3(formulax = ~ variable + location, stattable2,\n                             val_obs = \"wrd\", val_mod = \"value\", logtrans = F)\nttable$location <- as.factor(ttable$location)\nttable$location <- factor(ttable$location, levels = locmod)\nlevels(ttable$location)\ndf.circle <- circleFun(c(0,0),2,npoints = 100)\ndf.sdcircle <- circleFun(c(0,0),1.4,npoints=100)\n\n## Plot targetdiagram voor all groups\n\nlibrary(ggplot2)\n\nttable <- subset(ttable, ttable$nBIAS != Inf) # take out Inf's\n\nz <- ifelse(max(abs(ttable$nuRMSD), na.rm = TRUE) >\n              max(abs(ttable$nBIAS), na.rm = TRUE),\n            max(abs(ttable$nuRMSD)),\n            max(abs(ttable$nBIAS))) # maximum scale\n\nzz <- ifelse(z > 1, 1.2 * z, 1.2)  # Litle bit of room for points at the outside\nzz = 2 ## manual scale, overruling autoscale\n\np <- ggplot(ttable,aes(nuRMSD,nBIAS))\np +\n  geom_point(aes(color = location),size=4) +\n  #   geom_point(aes(color = season),size=4) +\n  geom_path(data=df.circle,aes(x,y)) +\n  geom_path(data=df.sdcircle,aes(x,y), color=\"grey\") +\n  xlim(c(-zz,zz)) + ylim(c(-zz,zz)) +\n  theme(aspect.ratio = 1) +\n  facet_grid(variable ~ .) +\n  theme(text = element_text(size = 12))\n\nggsave(file.path(savedir, paste(plotname, \"RWS_target_var_loc\", modversion, \".png\", sep = \"_\")),\n       width = 6, height = 6)\n\n##===============================================================\n\nttable <- make.target.table3(formulax = ~ variable , stattable2,\n                             val_obs = \"wrd\", val_mod = \"value\", logtrans = F)\n\ndf.circle <- circleFun(c(0,0),2,npoints = 100)\ndf.sdcircle <- circleFun(c(0,0),1.4,npoints=100)\n\n## Plot targetdiagram voor all groups\n\nlibrary(ggplot2)\n\nttable <- subset(ttable, ttable$nBIAS != Inf) # take out Inf's\n\nz <- ifelse(max(abs(ttable$nuRMSD), na.rm = TRUE) >\n              max(abs(ttable$nBIAS), na.rm = TRUE),\n            max(abs(ttable$nuRMSD)),\n            max(abs(ttable$nBIAS))) # maximum scale\n\nzz <- ifelse(z > 1, 1.2 * z, 1.2)  # Litle bit of room for points at the outside\nzz = 2 ## manual scale, overruling autoscale\n\np <- ggplot(ttable,aes(nuRMSD,nBIAS))\np +\n  geom_point(aes(),size=4) +\n  #   geom_point(aes(color = season),size=4) +\n  geom_path(data=df.circle,aes(x,y)) +\n  geom_path(data=df.sdcircle,aes(x,y), color=\"grey\") +\n  xlim(c(-zz,zz)) + ylim(c(-zz,zz)) +\n  theme(aspect.ratio = 1) +\n  facet_grid(variable ~ .) +\n  theme(text = element_text(size = 16))\n\nggsave(file.path(savedir, paste(plotname, \"RWS_target_var_\", modversion, \".png\", sep = \"_\")),\n       width = 6, height = 6)\n\n}\n\n",
    "created" : 1422896773548.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1646684753",
    "id" : "5F6B7A9D",
    "lastKnownWriteTime" : 1423745012,
    "path" : "D:/REPOS-CHECK-OUTS/OpenEarthTools/r/applications/Delft3D/DelwaqR/ED_validation-mwtl-nyears.R",
    "project_path" : "ED_validation-mwtl-nyears.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}