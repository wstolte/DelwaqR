{
    "contents" : "\nsetwd(\"D:/REPOS-CHECK-OUTS/OpenEarthTools/r/applications/Delft3D/waq\")\nlibrary(reshape2)\nlibrary(ggplot2)\nrequire(scales)\nrequire(plyr)\nsource(\"read.his2.R\")\n\n## model application version\nhindcast <- \"VECT84_03M\"\nforecast <- \"VECT30_49M\"\nobs <- \"mw1984-2001b.his\"\nmoddir <- \"d:\\\\MODELS\\\\NORTH-SEA_VECTORS_EMTOX_RERUNS\"  # local path\n# moddir <- \"n:\\\\Projects\\\\1201000\\\\1201194\\\\B. Measurements and calculations\\\\WP4.2\\\\EMTOX-reruns\\\\\"\nsavedir <- paste(moddir,\"/plots_\",sep=\"\")\ndir.create(savedir)\n\nfile1 <- paste(hindcast,\"_sel.his\",sep=\"\")\nfilename1 <- file.path(moddir,\"hindcast\", file1)\nfile2 <- paste(forecast,\"_sel.his\",sep=\"\")\nfilename2 <- file.path(moddir,\"forecast\", file2)\nfilename3 <- file.path(moddir, obs)\n\narr1 <- read.his2(filename1)\narr2 <- read.his2(filename2)\narr3 <- read.his2(filename3)\n\nmappingvalues <- read.csv2(\n  file.path(moddir, \"Rtools\\\\Mapping_variables.csv\"), skip = 1, colClasses = \"character\", sep = \",\")\ndimnames(arr3)[[3]] <- mapvalues(as.factor(dimnames(arr3)[[3]]),\n                                 mappingvalues$obs_ksenos, mappingvalues$his_ksenos)\n\n#arr[,,\"SaturOXY\"]<-arr[,,\"SaturOXY\"]*arr[,,\"OXY\"]\n\n##Validation\n\nlocmod = list(\n  c(\"NZR9TS010\", \"NZR9TS100\"),\n  c(\"NZR6NW010\", \"NZR6NW070\")\n)\n\nsubmod = list(\n  c(\"Temperatur\", \"Sal\", \"TOTN\", \"TOTP\") ,\n  c(\"NH4\", \"NO3\", \"O-PO4\", \"SI\"),\n  c(\"DIATOMS\",\"FLAGELAT\",\"DINOFLAG\",\"PHAEOCYS\"),\n  c( \"IM1\", \"Ext.tot\", \"Chlfa\", \"OXY\")\n)\n\n##=== Plot time series and boxplots =========================================\n\nfor(ii in seq(1, length(locmod))) {\n  for(jj in seq(1, length(submod))) {\n    # ii=1\n    # jj=1\n    df1 <- melt(arr1[,locmod[[ii]], submod[[jj]]], varnames=c(\"time\", \"location\", \"substance\"))\n    df1$datetime <- as.POSIXct(x=df1$time)\n    df1$group <- \"hindcast\"; levels(df1$location) = as.factor(locmod[[ii]])\n\n    df3 <- melt(arr3[,locmod[[ii]],submod[[jj]]], varnames=c(\"time\", \"location\", \"substance\"))\n    df3$datetime <- as.POSIXct(x=df3$time)\n    df3$group <- \"observed\"\n    df3[df3==-999] <- NA\n\n    df <- rbind(df1, df3)\n    df$month <- as.factor(format(df$datetime,\"%m\"))\n    df$substance <- factor(df$substance, levels = submod[[jj]])\n\n    p <- ggplot(df1,aes(datetime, value))\n    p + geom_line(aes(),alpha=0.4) +\n      geom_point(data=df3, aes(x = datetime, y = value), alpha = 0.5, size = 1) +\n      labs(x=\"\",y=\"\",title=\"modelled hindcast validation\") +\n      facet_wrap(~ substance + location,scales=\"free\", ncol = 1) +\n      theme(axis.text = element_text(size = 12))\n\n    ggsave(file=paste(savedir,\"/validation\",ii,jj,\".png\",sep=\"\"),\n           width=12, height=12, dpi=300)\n\n    q <- ggplot(df,aes(month, value))\n    q +\n      geom_boxplot(aes(fill = group), outlier.size = 0.1, size = 0.2) +\n      labs(x=\"\",y=\"\",title=\"title\") +\n      facet_grid(substance ~ location,scales=\"free\") +\n      theme(axis.text = element_text(size = 12))\n\n    ggsave(file=paste(savedir,\"/validation-by-month\",ii,jj,\".png\",sep=\"\"),\n           width=12,height=12,dpi=300)\n\n  }\n}\n\n\n##========  Comparison =================================================================\n\n\nfor(ii in seq(1, length(locmod))) {\n  for(jj in seq(1, length(submod))) {\n\n#     ii = 2\n#     jj = 3\n#\n    df1 <- melt(arr1[,locmod[[ii]], submod[[jj]]], varnames=c(\"time\", \"location\", \"substance\"))\n    df1$datetime <- as.POSIXct(x=df1$time)\n    df1$group <- \"hindcast\"; levels(df1$location) = as.factor(locmod[[ii]])\n\n    df2 <- melt(arr2[,locmod[[ii]], submod[[jj]]], varnames=c(\"time\", \"location\", \"substance\"))\n    df2$datetime <- as.POSIXct(x=df2$time)\n    df2$datetime <- df2$datetime - (df2$datetime[1] - df1$datetime[1])\n    df2$group <- \"forecast\"; levels(df2$location) = as.factor(locmod[[ii]])\n\n\n    df <- rbind(df1, df2)\n    df$month <- as.factor(format(df$datetime,\"%m\"))\n    df$substance <- factor(df$substance, levels = submod[[jj]])\n    dfmed <- dcast(df, month + location + substance + group ~ ., median)\n    colnames(dfmed)[length(colnames(dfmed))] = \"value\"\n\n    ## Comparison time series\n    q <- ggplot(df,aes(datetime, value, color = group))\n    q +\n      geom_line(size = 0.5) +\n      labs(x=\"\",y=\"\",title=\"title\") +\n      facet_wrap(~ substance + location,scales=\"free\", ncol = 1) +\n      theme(axis.text = element_text(size = 12))\n\n\n    ggsave(file=paste(savedir,\"/comparison-time-series\",ii,jj,\".png\",sep=\"\"),\n           width=12,height=12,dpi=300)\n\n    q <- ggplot(df,aes(month, value))\n    q + #geom_line(aes(),alpha=0.4) +\n      geom_boxplot(aes(fill = group),  outlier.size = 0.3, size = 0.2) +\n      labs(x=\"\",y=\"\",title=\"title\") +\n#       scale_y_continuous(limits = c(0,1)) +\n      # ylim(-5, 5) +\n      facet_grid(substance ~ location,scales=\"free\") +\n      theme(axis.text = element_text(size = 12))\n\n    ggsave(file=paste(savedir,\"/comparison-by-month\",ii,jj,\".png\",sep=\"\"),\n           width=8,height=10,dpi=300)\n  }\n}\n\n## Calculate statistices for target diagram ===========================================\n\nlocmods <- NULL\n# for(ii in seq(1, length(locmod))) locmods <- append(locmods, locmod[[ii]])\n## OR\nlocmods <- dimnames(arr3)[[2]] ## to plot all locations\n## OR\nlocmods <- locmods[c(1,2,3,6,7,10,11,14,17,20,23,26,29,30)] ## to plot all surface locations\n\n\nfor(jj in seq(1, length(submod))) {\n\n#       jj=1\n\n  df1 <- melt(arr1[,locmods, submod[[jj]]], varnames=c(\"time\", \"location\", \"substance\"))\n  df1$datetime <- as.POSIXct(x=df1$time)\n  df1$group <- \"hindcast\"; levels(df1$location) = as.factor(locmods)\n\n  df3 <- melt(arr3[,locmods,submod[[jj]]], varnames=c(\"time\", \"location\", \"substance\"))\n  df3$datetime <- as.POSIXct(x=df3$time)\n  df3$group <- \"observed\"\n  df3[df3==-999] <- NA\n\n  df4 <- subset(df3, df3$value > 0)\n  df.stat <- merge(df4,df1,by=c(\"datetime\",\"substance\",\"location\"),all = F, na.rm = T)\n  df.stat$substance <- factor(df.stat$substance, levels = submod[[jj]])\n  df.stat$month <- as.numeric(format(df.stat$datetime, \"%m\"))\n  df.stat$season <- ifelse(df.stat$month < 6 | df.stat$month > 10,\n                           \"winter\",\"summer\")\n  df.stat$year <- as.numeric(format(df.stat$datetime, \"%Y\"))\n  df.stat$month <- as.factor(df.stat$month)\n  workdir <- \"d:/REPOS-CHECK-OUTS/OpenEarthTools/r/applications/Delft3D/waq/\"\n  # setwd(workdir)\n\n  source(file.path(workdir,\"target-function3.r\"))\n\n  if(jj< 3) {\n    df.target <- make.target.table3(~ year +substance, df.stat, \"value.x\", \"value.y\", logtrans = F)\n  } else {\n    df.target <- make.target.table3(~ year + substance, df.stat, \"value.x\", \"value.y\", logtrans = T)\n  }\n\n  df.target <- subset(df.target, df.target$nBIAS > -1e10 & df.target$nBIAS < 1e10)\n  df.target <- subset(df.target,  !is.nan(df.target$uRMSD))\n  ## Make a unity circle with diameter 2 and center at 0,0\n  circleFun <- function(center = c(0,0),diameter = 1, npoints = 100){\n    r = diameter / 2\n    tt <- seq(0,2*pi,length.out = npoints)\n    xx <- center[1] + r * cos(tt)\n    yy <- center[2] + r * sin(tt)\n    return(data.frame(x = xx, y = yy))\n  }\n  df.circle <- circleFun(c(0,0),2,npoints = 100)\n\n  ## Plot targetdiagram voor all groups\n  library(ggplot2)\n\n  z <- ifelse(max(abs(df.target$nuRMSD), na.rm = TRUE) >\n                max(abs(df.target$nBIAS), na.rm = TRUE),\n              max(abs(df.target$nuRMSD)),max(abs(df.target$nBIAS))) # maximum scale\n  zz <- ifelse(z > 1, 1.2 * z, 1.2)\n  #zz = 5\n  p <- ggplot(df.target,aes(nuRMSD,nBIAS))\n  p + geom_point(aes(color = year, shape = substance), size=4) +\n    #      geom_path(aes(color = location, arrow = arrow()), size = 1) +\n    geom_path(data=df.circle,aes(x,y)) +\n    geom_path(data=df.circle,aes(0.74*x,0.74*y), linetype = 2, size = 0.5) +\n    xlim(c(-zz,zz)) + ylim(c(-zz,zz)) +\n#     xlim(c(-3,3)) + ylim(c(-3,3)) +   # manual scale setting replacing maximum scale\n    theme_grey() +\n    theme(aspect.ratio = 1) +\n    theme(panel.grid.major = element_line(colour = \"darkgrey\")) +\n    theme(legend.position = \"right\") +\n#     theme(legend.box = \"horizontal\") +\n#     facet_grid(substance ~ .) +\n    theme(axis.text = element_text(size = 12)) +\n    scale_colour_gradient(low=\"red\", high = \"blue\") +\n    scale_shape_manual(values = 1:20)\n\n  #geom_text(data=head(df.target, 1), label=head(df.target$year, 1), colour=\"blue\") +\n  #geom_text(data=tail(df.target, 1), label=tail(df.target$year, 1), colour=\"blue\")\n       ggsave(file=paste(savedir,\"/target-diagram\",jj,\".png\",sep=\"\"),\n           width=6,dpi=300)\n\n  ggsave(file=paste(savedir,\"/target-diagram\",jj,\".png\",sep=\"\"),\n         width=12,dpi=300)\n\n}\n\n##  Make Taylor diagrams  =============================== WERKT NOG NIET GOED ====\nrequire(plotrix)\n\n\n# locmods <- NULL\n# for(ii in seq(1, length(locmod))) locmods <- append(locmods, locmod[[ii]])\nsubmods <- NULL\nfor(ii in seq(1, length(submod))) submods <- append(submods, submod[[ii]])\n\n# ii=1\n# jj=1\ndf1 <- melt(arr1[,locmods, submods], varnames=c(\"time\", \"location\", \"substance\"))\ndf1$datetime <- as.POSIXct(x=df1$time)\ndf1$group <- \"hindcast\"; levels(df1$location) = as.factor(locmods)\n\ndf3 <- melt(arr3[,locmods,submods], varnames=c(\"time\", \"location\", \"substance\"))\ndf3$datetime <- as.POSIXct(x=df3$time)\ndf3$group <- \"observed\"\ndf3[df3==-999] <- NA\n\ndf4 <- subset(df3, df3$value > 0)\ndf.stat <- merge(df4,df1,by=c(\"datetime\",\"substance\",\"location\"),all = F, na.rm = T)\ndf.stat$month <- as.numeric(format(df.stat$datetime, \"%m\"))\ndf.stat$season <- ifelse(df.stat$month < 6 | df.stat$month > 10, \"winter\",\"summer\")\ndf.stat$year <- as.numeric(format(df.stat$datetime, \"%Y\"))\ndf.stat$month <- as.factor(df.stat$month)\n\nfor(jj in seq(2, length(submods))) {\n\n  #  jj=1\n\n  png(filename = paste(savedir, \"\\\\Taylor_\", submods[jj], \".png\", sep = \"\"),\n      width = 480, height = 480, units = \"px\", pointsize = 12,\n      bg = \"white\", res = NA, family = \"\")\n\n  ii=1\n\n  df.stat1 <- subset(df.stat,df.stat$location == locmods[ii])\n  df.stat1 <- subset(df.stat1,df.stat1$substance == submods[jj])\n  taylor.diagram(df.stat1$value.x,df.stat1$value.y,\n                 main=paste(\"Taylor diagram \", submods[jj]),\n                 pch=16, col = ii, normalize = F)  #, pos.cor=FALSE\n\n  for (ii in seq(2,length(locmods))) {\n    #ii = 3\n    df.stat1 <- subset(df.stat,df.stat$substance == submods[jj])\n    df.stat1 <- subset(df.stat1,df.stat1$location == locmods[ii])\n    taylor.diagram(df.stat1$value.x, df.stat1$value.y, add = T,\n                   pch=16, col = ii, normalize = F)  #, pos.cor=FALSE\n  }\n\n  legend(\"topright\",legend=locmods,pch = 16, col = c(1:length(locmods)))\n\n  dev.off()  ###   Grafiekje saven\n\n}\n\n",
    "created" : 1425038626392.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "922540510",
    "id" : "DDE9A4F0",
    "lastKnownWriteTime" : 1425290835,
    "path" : "N:/Projects/1201000/1201194/B. Measurements and calculations/WP4.2/EMTOX-reruns/Rtools/Read-and-plot-his-North-Sea-v1.R",
    "project_path" : null,
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}